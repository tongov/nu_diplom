# -*- coding: utf-8 -*-
"""NEN_bot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oG24UAFAji1LBPOKDboZF6qWVYxqtahP

Бот для программы генерации картинок stable diffusion по промпту клиента
"""

!pip install diffusers transformers gradio torch -qq

#!pip install accelerate

#!python nen_bot.py

import os
import gradio as gr
import torch
from diffusers import StableDiffusionPipeline
from diffusers import EulerDiscreteScheduler

import transformers

transformers.utils.move_cache()

model = "nen"
token = "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"  # token for nen
#model = "nen100"
#token = "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"  # token for nen100

# Загрузка модели и планировщика
#model_id = "stabilityai/stable-diffusion-2-1"
model_id = f"Nenmen/{model}"

os.environ["TOKEN"] = token
scheduler = EulerDiscreteScheduler.from_pretrained(model_id, subfolder="scheduler")
pipe = StableDiffusionPipeline.from_pretrained(model_id, scheduler=scheduler, torch_dtype=torch.float16).to("cuda")

# Функция для генерации изображения
def generate_image(prompt, num_inference_steps=50, guidance_scale=7.5):
  """
  Генерирует изображение с помощью Stable Diffusion.

  Args:
    prompt: Текстовый запрос для генерации изображения.
    num_inference_steps: Количество шагов инференса.
    guidance_scale: Параметр направляющего масштаба.

  Returns:
    Генерация изображения.
  """
  image = pipe(prompt, num_inference_steps=num_inference_steps, guidance_scale=guidance_scale).images[0]
  return image

# Создание интерфейса Gradio
iface = gr.Interface(
    fn=generate_image,
    inputs=[
        gr.Textbox(label="Текстовый запрос", lines=1, max_lines=30),
        gr.Slider(label="Количество шагов инференса", minimum=10, maximum=100, step=10, value=50),
        gr.Slider(label="Направляющий масштаб", minimum=1, maximum=15, step=0.5, value=7.5)
    ],
    outputs="image",
    title=f"Генератор изображений Stable Diffusion в стиле {model}",
)

# Запуск интерфейса
iface.launch(share=True)

!gradio deploy

